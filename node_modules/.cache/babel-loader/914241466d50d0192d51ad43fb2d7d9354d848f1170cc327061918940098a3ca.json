{"ast":null,"code":"var _jsxFileName = \"/workspaces/reactprenotazione/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport { useState } from 'react';\n\n// Load the Google API client library\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ngapi.load('client:auth2', initClient);\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const {\n    isLoading\n  } = useSessionContext();\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n  async function createCalendarEvent() {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(),\n        // Date.toISOString() ->\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone // America/Los_Angeles\n      },\n\n      'end': {\n        'dateTime': end.toISOString(),\n        // Date.toISOString() ->\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone // America/Los_Angeles\n      }\n    };\n\n    await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token // Access token for google\n      },\n\n      body: JSON.stringify(event)\n    }).then(data => {\n      return data.json();\n    }).then(data => {\n      console.log(data);\n      alert(\"Event created, check your Google Calendar!\");\n    });\n  }\n  console.log(session);\n  console.log(start);\n  console.log(eventName);\n  console.log(eventDescription);\n  async function readCalendarEvent() {\n    console.log(\"Read calendar event\");\n    fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin=2023-08-25T00:00:00Z&maxResults=1&orderBy=updated&singleEvents=true\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    }).then(response => {\n      if (!response.ok) {\n        return response.json().then(errorResponse => {\n          throw new Error(`API Error: ${errorResponse.error.message}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('Fetch error:', error);\n    });\n  }\n  function initClient() {\n    // Initialize the API client with your API key or OAuth credentials\n    gapi.client.init({\n      apiKey: 'YOUR_API_KEY',\n      clientId: 'YOUR_CLIENT_ID',\n      discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\n      scope: \"https://www.googleapis.com/auth/calendar.readonly\"\n    }).then(function () {\n      // Call the function to retrieve events\n      listUpcomingEvents();\n    });\n  }\n  function listUpcomingEvents() {\n    // Set the minimum start time for events (timeMin)\n    var now = new Date();\n    var timeMin = now.toISOString(); // Current time in ISO format\n\n    // Make the API request to retrieve events\n    gapi.client.calendar.events.list({\n      'calendarId': 'primary',\n      // Use 'primary' for the user's primary calendar\n      'timeMin': timeMin,\n      'showDeleted': false,\n      'singleEvents': true,\n      'orderBy': 'startTime'\n    }).then(function (response) {\n      var events = response.result.items;\n      if (events.length > 0) {\n        console.log('Upcoming events:');\n        for (var i = 0; i < events.length; i++) {\n          var event = events[i];\n          var start = event.start.dateTime || event.start.date;\n          console.log('%s - %s', start, event.summary);\n        }\n      } else {\n        console.log('No upcoming events found.');\n      }\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        margin: \"30px auto\"\n      },\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hey there \", session.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start of your event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"End of your event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEventName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEventDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createCalendarEvent(),\n          children: \"Create Calendar Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => readCalendarEvent(),\n          children: \"Read Calendar  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => googleSignIn(),\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qDXkToJcd/JRKWx5fdqhxOx3t4E=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useSession","useSupabaseClient","useSessionContext","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","gapi","load","initClient","App","_s","start","setStart","Date","end","setEnd","eventName","setEventName","eventDescription","setEventDescription","session","supabase","isLoading","googleSignIn","error","auth","signInWithOAuth","provider","options","scopes","alert","console","log","signOut","createCalendarEvent","event","toISOString","Intl","DateTimeFormat","resolvedOptions","timeZone","fetch","method","headers","provider_token","body","JSON","stringify","then","data","json","readCalendarEvent","response","ok","errorResponse","Error","message","catch","client","init","apiKey","clientId","discoveryDocs","scope","listUpcomingEvents","now","timeMin","calendar","events","list","result","items","length","i","dateTime","date","summary","className","children","style","width","margin","user","email","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/workspaces/reactprenotazione/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport { useState } from 'react';\n \n// Load the Google API client library\ngapi.load('client:auth2', initClient);\n\n\nfunction App() {\n  const [ start, setStart ] = useState(new Date());\n  const [ end, setEnd ] = useState(new Date());\n  const [ eventName, setEventName ] = useState(\"\");\n  const [ eventDescription, setEventDescription ] = useState(\"\");\n\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const { isLoading } = useSessionContext();\n  \n  if(isLoading) {\n    return <></>\n  }\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if(error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n\n  async function createCalendarEvent() {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(), // Date.toISOString() ->\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone // America/Los_Angeles\n      },\n      'end': {\n        'dateTime': end.toISOString(), // Date.toISOString() ->\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone // America/Los_Angeles\n      }\n    }\n    await fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events\", {\n      method: \"POST\",\n      headers: {\n        'Authorization':'Bearer ' + session.provider_token // Access token for google\n      },\n      body: JSON.stringify(event)\n    }).then((data) => {\n      return data.json();\n    }).then((data) => {\n      console.log(data);\n      alert(\"Event created, check your Google Calendar!\");\n    });\n  }\n\n  console.log(session);\n  console.log(start);\n  console.log(eventName);\n  console.log(eventDescription);\n \n  async function readCalendarEvent() {\n    console.log(\"Read calendar event\");\n    fetch(\"https://www.googleapis.com/calendar/v3/calendars/primary/events?timeMin=2023-08-25T00:00:00Z&maxResults=1&orderBy=updated&singleEvents=true\", {\n      method: \"GET\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    })\n    .then(response => {\n      if (!response.ok) {\n        return response.json().then(errorResponse => {\n          throw new Error(`API Error: ${errorResponse.error.message}`);\n        });\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(data);\n    })\n    .catch(error => {\n      console.error('Fetch error:', error);\n    });\n\n    \n\n  }\n  \n\n\nfunction initClient() {\n  // Initialize the API client with your API key or OAuth credentials\n  gapi.client.init({\n    apiKey: 'YOUR_API_KEY',\n    clientId: 'YOUR_CLIENT_ID',\n    discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"],\n    scope: \"https://www.googleapis.com/auth/calendar.readonly\",\n  }).then(function() {\n    // Call the function to retrieve events\n    listUpcomingEvents();\n  });\n}\n\nfunction listUpcomingEvents() {\n  // Set the minimum start time for events (timeMin)\n  var now = new Date();\n  var timeMin = now.toISOString(); // Current time in ISO format\n\n  // Make the API request to retrieve events\n  gapi.client.calendar.events.list({\n    'calendarId': 'primary', // Use 'primary' for the user's primary calendar\n    'timeMin': timeMin,\n    'showDeleted': false,\n    'singleEvents': true,\n    'orderBy': 'startTime'\n  }).then(function(response) {\n    var events = response.result.items;\n\n    if (events.length > 0) {\n      console.log('Upcoming events:');\n      for (var i = 0; i < events.length; i++) {\n        var event = events[i];\n        var start = event.start.dateTime || event.start.date;\n        console.log('%s - %s', start, event.summary);\n      }\n    } else {\n      console.log('No upcoming events found.');\n    }\n  });\n}\n\n\n\n  \n  return (\n    <div className=\"App\">\n      <div style={{width: \"400px\", margin: \"30px auto\"}}>\n        {session ?\n          <>\n            <h2>Hey there {session.user.email}</h2>\n            <p>Start of your event</p>\n          \n            <p>End of your event</p>\n      \n            <p>Event name</p>\n            <input type=\"text\" onChange={(e) => setEventName(e.target.value)} />\n            <p>Event description</p>\n            <input type=\"text\" onChange={(e) => setEventDescription(e.target.value)} />\n            <hr />\n            <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n            <p></p>\n            <button onClick={() => signOut()}>Sign Out</button>\n            <p></p>\n            <button onClick={() => readCalendarEvent()}>Read Calendar  </button>\n          </>\n          :\n          <>\n             \n            <button onClick={() => googleSignIn()}>Sign In With Google</button>\n          </>\n          \n         \n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}